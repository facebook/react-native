import*as e from"../../core/common/common.js";import*as i from"../../core/i18n/i18n.js";import*as r from"../../core/root/root.js";import*as t from"../../ui/legacy/legacy.js";import*as o from"./security.js";const a={security:"Security",PrivacyAndSecurity:"Privacy and security",showSecurity:"Show Security",showPrivacyAndSecurity:"Show Privacy and security"},c=i.i18n.registerUIStrings("panels/security/security-meta.ts",a),n=i.i18n.getLazilyComputedLocalizedString.bind(void 0,c);let s;async function y(){return s||(s=await import("./security.js")),s}t.ViewManager.registerViewExtension({location:"panel",id:"security",title:()=>r.Runtime.hostConfig.devToolsPrivacyUI?.enabled?n(a.PrivacyAndSecurity)():n(a.security)(),commandPrompt:()=>r.Runtime.hostConfig.devToolsPrivacyUI?.enabled?n(a.showPrivacyAndSecurity)():n(a.showSecurity)(),order:80,persistence:"closeable",loadView:async()=>(await y()).SecurityPanel.SecurityPanel.instance()}),e.Revealer.registerRevealer({contextTypes:()=>[o.CookieReportView.CookieReportView],destination:e.Revealer.RevealerDestination.SECURITY_PANEL,loadRevealer:async()=>new((await y()).SecurityPanel.SecurityRevealer)});
