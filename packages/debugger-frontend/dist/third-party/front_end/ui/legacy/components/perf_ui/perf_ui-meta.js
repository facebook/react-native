import*as e from"../../../../core/common/common.js";import*as t from"../../../../core/i18n/i18n.js";import"../../../../core/root/root.js";import*as o from"../../legacy.js";const i={flamechartSelectedNavigation:"Flamechart navigation:",modern:"Modern",classic:"Classic",liveMemoryAllocationAnnotations:"Live memory allocation annotations",showLiveMemoryAllocation:"Show live memory allocation annotations",hideLiveMemoryAllocation:"Hide live memory allocation annotations",collectGarbage:"Collect garbage"},a=t.i18n.registerUIStrings("ui/legacy/components/perf_ui/perf_ui-meta.ts",i),n=t.i18n.getLazilyComputedLocalizedString.bind(void 0,a);let l;o.ActionRegistration.registerActionExtension({actionId:"components.collect-garbage",category:"PERFORMANCE",title:n(i.collectGarbage),iconClass:"mop",loadActionDelegate:async()=>new((await async function(){return l||(l=await import("./perf_ui.js")),l}()).GCActionDelegate.GCActionDelegate)}),e.Settings.registerSettingExtension({category:"PERFORMANCE",storageType:"Synced",title:n(i.flamechartSelectedNavigation),settingName:"flamechart-selected-navigation",settingType:"enum",defaultValue:"classic",options:[{title:n(i.modern),text:n(i.modern),value:"modern"},{title:n(i.classic),text:n(i.classic),value:"classic"}]}),e.Settings.registerSettingExtension({category:"MEMORY",experiment:"live-heap-profile",title:n(i.liveMemoryAllocationAnnotations),settingName:"memory-live-heap-profile",settingType:"boolean",defaultValue:!1,options:[{value:!0,title:n(i.showLiveMemoryAllocation)},{value:!1,title:n(i.hideLiveMemoryAllocation)}]});
