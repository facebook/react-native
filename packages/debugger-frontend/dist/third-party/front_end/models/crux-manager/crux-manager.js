import*as e from"../../core/common/common.js";import*as t from"../../core/i18n/i18n.js";import*as i from"../../core/root/root.js";import*as r from"../../core/sdk/sdk.js";import*as n from"../emulation/emulation.js";const a={fieldOverrideWarning:"Field data is configured for a different URL than the current page."},o=t.i18n.registerUIStrings("models/crux-manager/CrUXManager.ts",a),s=t.i18n.getLocalizedString.bind(void 0,o);let c;const l=["ALL","DESKTOP","PHONE"],g=["origin","url"],d=["first_contentful_paint","largest_contentful_paint","cumulative_layout_shift","interaction_to_next_paint","round_trip_time","form_factors","largest_contentful_paint_image_time_to_first_byte","largest_contentful_paint_image_resource_load_delay","largest_contentful_paint_image_resource_load_duration","largest_contentful_paint_image_element_render_delay"];class u extends e.ObjectWrapper.ObjectWrapper{#e=new Map;#t=new Map;#i;#r;#n="https://chromeuxreport.googleapis.com/v1/records:queryRecord?key=AIzaSyCCSOx25vrb5z0tbedCB3_JRzzbVW6Uwgw";#a;fieldDeviceOption="AUTO";fieldPageScope="url";constructor(){super();const t=!0===i.Runtime.hostConfig.isOffTheRecord?"Session":"Global";this.#r=e.Settings.Settings.instance().createSetting("field-data",{enabled:!1,override:"",originMappings:[],overrideEnabled:!1},t),this.#r.addChangeListener((()=>{this.refresh()})),r.TargetManager.TargetManager.instance().addModelListener(r.ResourceTreeModel.ResourceTreeModel,r.ResourceTreeModel.Events.FrameNavigated,this.#o,this)}static instance(e={forceNew:null}){const{forceNew:t}=e;return c&&!t||(c=new u),c}get pageResult(){return this.#a}getConfigSetting(){return this.#r}isEnabled(){return this.#r.get().enabled}async getFieldDataForPage(e){const t={"origin-ALL":null,"origin-DESKTOP":null,"origin-PHONE":null,"origin-TABLET":null,"url-ALL":null,"url-DESKTOP":null,"url-PHONE":null,"url-TABLET":null,warnings:[]};try{const i=this.#s(e),r=[];for(const e of g)for(const n of l){const a=this.#c(i,e,n).then((i=>{t[`${e}-${n}`]=i}));r.push(a)}await Promise.all(r)}catch(e){console.error(e)}finally{return t}}#l(e){try{const t=new URL(e),i=(this.#r.get().originMappings||[]).find((e=>e.developmentOrigin===t.origin));if(!i)return e;const r=new URL(i.productionOrigin);return r.pathname=t.pathname,r.href}catch{return e}}async getFieldDataForCurrentPageForTesting(){return await this.#g()}async#g(){const e=this.#i||await this.#d(),t=this.#r.get().overrideEnabled?this.#r.get().override||"":this.#l(e),i=await this.getFieldDataForPage(t);return e!==t&&i.warnings.push(s(a.fieldOverrideWarning)),i}async#d(){const e=r.TargetManager.TargetManager.instance();let t=e.inspectedURL();return t||(t=await new Promise((t=>{e.addEventListener("InspectedURLChanged",(function i(r){const n=r.data.inspectedURL();n&&(t(n),e.removeEventListener("InspectedURLChanged",i))}))}))),t}async#o(e){e.data.isPrimaryFrame()&&(this.#i=e.data.url,await this.refresh())}async refresh(){this.#a=void 0,this.dispatchEventToListeners("field-data-changed",void 0),this.#r.get().enabled&&(this.#a=await this.#g(),this.dispatchEventToListeners("field-data-changed",this.#a))}#s(e){const t=new URL(e);return t.hash="",t.search="",t}async#c(e,t,i){const{origin:r,href:n,hostname:a}=e;if("localhost"===a||"127.0.0.1"===a||!r.startsWith("http"))return null;const o="origin"===t?this.#e:this.#t,s="origin"===t?`${r}-${i}`:`${n}-${i}`,c=o.get(s);if(void 0!==c)return c;try{const e="ALL"===i?void 0:i,a="origin"===t?await this.#u({origin:r,metrics:d,formFactor:e}):await this.#u({url:n,metrics:d,formFactor:e});return o.set(s,a),a}catch(e){return console.error(e),null}}async#u(e){const t=JSON.stringify(e),i=await fetch(this.#n,{method:"POST",body:t});if(!i.ok&&404!==i.status)throw new Error(`Failed to fetch data from CrUX server (Status code: ${i.status})`);const r=await i.json();if(404===i.status){if("NOT_FOUND"===r?.error?.status)return null;throw new Error(`Failed to fetch data from CrUX server (Status code: ${i.status})`)}if(!("record"in r))throw new Error(`Failed to find data in CrUX response: ${JSON.stringify(r)}`);return r}#h(){const e=n.DeviceModeModel.DeviceModeModel.tryInstance();return null===e?"ALL":e.isMobile()?this.#a?.[`${this.fieldPageScope}-PHONE`]?"PHONE":"ALL":this.#a?.[`${this.fieldPageScope}-DESKTOP`]?"DESKTOP":"ALL"}resolveDeviceOptionToScope(e){return"AUTO"===e?this.#h():e}getSelectedDeviceScope(){return this.resolveDeviceOptionToScope(this.fieldDeviceOption)}getSelectedScope(){return{pageScope:this.fieldPageScope,deviceScope:this.getSelectedDeviceScope()}}getSelectedFieldResponse(){const e=this.fieldPageScope,t=this.getSelectedDeviceScope();return this.getFieldResponse(e,t)}getSelectedFieldMetricData(e){return this.getSelectedFieldResponse()?.record.metrics[e]}getFieldResponse(e,t){return this.#a?.[`${e}-${t}`]}setEndpointForTesting(e){this.#n=e}}export{u as CrUXManager,l as DEVICE_SCOPE_LIST};
