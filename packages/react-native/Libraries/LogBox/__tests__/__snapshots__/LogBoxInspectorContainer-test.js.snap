// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogBoxNotificationContainer should render both an error and warning notification 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "bottom": 20,
      "left": 10,
      "position": "absolute",
      "right": 10,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 8,
        "marginBottom": 5,
        "overflow": "hidden",
      }
    }
  >
    <LogBoxLogNotification
      level="warn"
      log={
        LogBoxLog {
          "category": "Some kind of message",
          "codeFrame": undefined,
          "componentStack": Array [],
          "componentStackType": "legacy",
          "count": 1,
          "extraData": undefined,
          "isComponentError": false,
          "level": "warn",
          "message": Object {
            "content": "Some kind of message",
            "substitutions": Array [],
          },
          "onNotificationPress": undefined,
          "stack": Array [],
          "symbolicated": Object {
            "error": null,
            "stack": null,
            "status": "NONE",
          },
          "symbolicatedComponentStack": Object {
            "componentStack": null,
            "error": null,
            "status": "NONE",
          },
          "type": undefined,
        }
      }
      onPressDismiss={[Function]}
      onPressOpen={[Function]}
      totalLogCount={1}
    />
  </View>
  <View
    style={
      Object {
        "borderRadius": 8,
        "marginBottom": 5,
        "overflow": "hidden",
      }
    }
  >
    <LogBoxLogNotification
      level="error"
      log={
        LogBoxLog {
          "category": "Some kind of message (latest)",
          "codeFrame": undefined,
          "componentStack": Array [],
          "componentStackType": "legacy",
          "count": 1,
          "extraData": undefined,
          "isComponentError": false,
          "level": "error",
          "message": Object {
            "content": "Some kind of message (latest)",
            "substitutions": Array [],
          },
          "onNotificationPress": undefined,
          "stack": Array [],
          "symbolicated": Object {
            "error": null,
            "stack": null,
            "status": "NONE",
          },
          "symbolicatedComponentStack": Object {
            "componentStack": null,
            "error": null,
            "status": "NONE",
          },
          "type": undefined,
        }
      }
      onPressDismiss={[Function]}
      onPressOpen={[Function]}
      totalLogCount={1}
    />
  </View>
</RCTSafeAreaView>
`;

exports[`LogBoxNotificationContainer should render null with no logs 1`] = `null`;

exports[`LogBoxNotificationContainer should render null with no selected log and disabled 1`] = `null`;

exports[`LogBoxNotificationContainer should render selected fatal error even when disabled 1`] = `null`;

exports[`LogBoxNotificationContainer should render selected syntax error even when disabled 1`] = `null`;

exports[`LogBoxNotificationContainer should render the latest error notification 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "bottom": 20,
      "left": 10,
      "position": "absolute",
      "right": 10,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 8,
        "marginBottom": 5,
        "overflow": "hidden",
      }
    }
  >
    <LogBoxLogNotification
      level="error"
      log={
        LogBoxLog {
          "category": "Some kind of message (latest)",
          "codeFrame": undefined,
          "componentStack": Array [],
          "componentStackType": "legacy",
          "count": 1,
          "extraData": undefined,
          "isComponentError": false,
          "level": "error",
          "message": Object {
            "content": "Some kind of message (latest)",
            "substitutions": Array [],
          },
          "onNotificationPress": undefined,
          "stack": Array [],
          "symbolicated": Object {
            "error": null,
            "stack": null,
            "status": "NONE",
          },
          "symbolicatedComponentStack": Object {
            "componentStack": null,
            "error": null,
            "status": "NONE",
          },
          "type": undefined,
        }
      }
      onPressDismiss={[Function]}
      onPressOpen={[Function]}
      totalLogCount={2}
    />
  </View>
</RCTSafeAreaView>
`;

exports[`LogBoxNotificationContainer should render the latest warning notification 1`] = `
<RCTSafeAreaView
  style={
    Object {
      "bottom": 20,
      "left": 10,
      "position": "absolute",
      "right": 10,
    }
  }
>
  <View
    style={
      Object {
        "borderRadius": 8,
        "marginBottom": 5,
        "overflow": "hidden",
      }
    }
  >
    <LogBoxLogNotification
      level="warn"
      log={
        LogBoxLog {
          "category": "Some kind of message (latest)",
          "codeFrame": undefined,
          "componentStack": Array [],
          "componentStackType": "legacy",
          "count": 1,
          "extraData": undefined,
          "isComponentError": false,
          "level": "warn",
          "message": Object {
            "content": "Some kind of message (latest)",
            "substitutions": Array [],
          },
          "onNotificationPress": undefined,
          "stack": Array [],
          "symbolicated": Object {
            "error": null,
            "stack": null,
            "status": "NONE",
          },
          "symbolicatedComponentStack": Object {
            "componentStack": null,
            "error": null,
            "status": "NONE",
          },
          "type": undefined,
        }
      }
      onPressDismiss={[Function]}
      onPressOpen={[Function]}
      totalLogCount={2}
    />
  </View>
</RCTSafeAreaView>
`;
