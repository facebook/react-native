// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlatList ignores invalid data 1`] = `
<RCTScrollView
  alwaysBounceVertical={true}
  data={123456}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={null}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminationRequest={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onScrollShouldSetResponder={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  pagingEnabled={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  scrollViewRef={[Function]}
  sendMomentumEvents={true}
  snapToEnd={true}
  snapToStart={true}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flexDirection": "column",
      "flexGrow": 1,
      "flexShrink": 1,
      "overflow": "scroll",
    }
  }
  viewabilityConfigCallbackPairs={Array []}
>
  <RCTScrollContentView
    collapsable={false}
    collapsableChildren={true}
    onLayout={[Function]}
    removeClippedSubviews={false}
    style={
      Array [
        false,
        undefined,
      ]
    }
  />
</RCTScrollView>
`;

exports[`FlatList renders all the bells and whistles 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "id": "0",
      },
      Object {
        "id": "1",
      },
      Object {
        "id": "2",
      },
      Object {
        "id": "3",
      },
      Object {
        "id": "4",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <RCTRefreshControl />
  <View>
    <View
      collapsable={false}
      onLayout={[Function]}
    >
      <header />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="0"
        />
        <item
          value="1"
        />
      </View>
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="2"
        />
        <item
          value="3"
        />
      </View>
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="4"
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <footer />
    </View>
  </View>
</RCTScrollView>
`;

exports[`FlatList renders array-like data 1`] = `
<RCTScrollView
  alwaysBounceVertical={true}
  data={
    Object {
      "0": Object {
        "key": "i1",
      },
      "1": Object {
        "key": "i2",
      },
      "2": Object {
        "key": "i3",
      },
      "length": 3,
    }
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={null}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminationRequest={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  onScrollShouldSetResponder={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  pagingEnabled={false}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  scrollViewRef={[Function]}
  sendMomentumEvents={true}
  snapToEnd={true}
  snapToStart={true}
  stickyHeaderIndices={Array []}
  style={
    Object {
      "flexDirection": "column",
      "flexGrow": 1,
      "flexShrink": 1,
      "overflow": "scroll",
    }
  }
  viewabilityConfigCallbackPairs={Array []}
>
  <RCTScrollContentView
    collapsable={false}
    collapsableChildren={true}
    onLayout={[Function]}
    removeClippedSubviews={false}
    style={
      Array [
        false,
        undefined,
      ]
    }
  >
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
  </RCTScrollContentView>
</RCTScrollView>
`;

exports[`FlatList renders empty list 1`] = `
<RCTScrollView
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View />
</RCTScrollView>
`;

exports[`FlatList renders null list 1`] = `
<RCTScrollView
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View />
</RCTScrollView>
`;

exports[`FlatList renders simple list (multiple columns) 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="i1"
        />
        <item
          value="i2"
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="i3"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`FlatList renders simple list 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`FlatList renders simple list using ListItemComponent (multiple columns) 1`] = `
<RCTScrollView
  ListItemComponent={[Function]}
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="i1"
        />
        <item
          value="i2"
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <item
          value="i3"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`FlatList renders simple list using ListItemComponent 1`] = `
<RCTScrollView
  ListItemComponent={[Function]}
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
  </View>
</RCTScrollView>
`;
