// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateEventEmitterCpp can generate for 'ArrayPropsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'BooleanPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'ColorPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'DimensionPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'EdgeInsetsPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'EnumPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'EventNestedObjectPropsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

void EventNestedObjectPropsNativeComponentViewEventEmitter::onChange(OnChange event) const {
  dispatchEvent(\\"change\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    {
  auto location = jsi::Object(runtime);
  {
    auto source = jsi::Object(runtime);
    source.setProperty(runtime, \\"url\\", event.location.source.url);
    location.setProperty(runtime, \\"source\\", source);
  }
  location.setProperty(runtime, \\"x\\", event.location.x);
  location.setProperty(runtime, \\"y\\", event.location.y);

      auto arrayOfObjects = jsi::Array(runtime, event.location.arrayOfObjects.size());
      size_t arrayOfObjectsIndex = 0;
      for (auto arrayOfObjectsValue : event.location.arrayOfObjects) {
        auto arrayOfObjectsObject = jsi::Object(runtime);
        {
    auto value = jsi::Object(runtime);
    value.setProperty(runtime, \\"str\\", arrayOfObjectsValue.value.str);
    arrayOfObjectsObject.setProperty(runtime, \\"value\\", value);
  }
        arrayOfObjects.setValueAtIndex(runtime, arrayOfObjectsIndex++, arrayOfObjectsObject);
      }
      location.setProperty(runtime, \\"arrayOfObjects\\", arrayOfObjects);
    
  payload.setProperty(runtime, \\"location\\", location);
}
    return payload;
  });
}

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'EventPropsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

void EventPropsNativeComponentViewEventEmitter::onChange(OnChange event) const {
  dispatchEvent(\\"paperDirectName\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, \\"value\\", event.value);
payload.setProperty(runtime, \\"source\\", event.source);
payload.setProperty(runtime, \\"progress\\", event.progress);
payload.setProperty(runtime, \\"scale\\", event.scale);
    return payload;
  });
}


void EventPropsNativeComponentViewEventEmitter::onEventDirect(OnEventDirect event) const {
  dispatchEvent(\\"eventDirect\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, \\"value\\", event.value);
    return payload;
  });
}


void EventPropsNativeComponentViewEventEmitter::onEventDirectWithPaperName(OnEventDirectWithPaperName event) const {
  dispatchEvent(\\"paperDirectName\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, \\"value\\", event.value);
    return payload;
  });
}


void EventPropsNativeComponentViewEventEmitter::onOrientationChange(OnOrientationChange event) const {
  dispatchEvent(\\"paperBubblingName\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, \\"orientation\\", toString(event.orientation));
    return payload;
  });
}


void EventPropsNativeComponentViewEventEmitter::onEnd(OnEnd event) const {
  dispatchEvent(\\"end\\", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}


void EventPropsNativeComponentViewEventEmitter::onEventBubblingWithPaperName(OnEventBubblingWithPaperName event) const {
  dispatchEvent(\\"paperBubblingName\\", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'FloatPropsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'ImagePropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'IntegerPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'InterfaceOnlyNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

void InterfaceOnlyNativeComponentViewEventEmitter::onChange(OnChange event) const {
  dispatchEvent(\\"change\\", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, \\"value\\", event.value);
    return payload;
  });
}

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'MixedPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'MultiNativePropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'NoPropsNoEventsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'ObjectPropsNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'PointPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;

exports[`GenerateEventEmitterCpp can generate for 'StringPropNativeComponent.js' using types under single namespace 1`] = `
Object {
  "EventEmitters.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/EventEmitters.h>


namespace facebook::react {

} // namespace facebook::react
",
}
`;
