// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateViewConfigJs can generate for 'ArrayPropsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'ArrayPropsNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'ArrayPropsNativeComponentView',

  validAttributes: {
    names: true,
    disableds: true,
    progress: true,
    radii: true,

    colors: {
      process: require('react-native/Libraries/StyleSheet/processColorArray'),
    },

    srcs: true,
    points: true,
    edgeInsets: true,
    dimensions: true,
    sizes: true,
    object: true,
    arrayOfObjects: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'BooleanPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'BooleanPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'BooleanPropNativeComponentView',

  validAttributes: {
    disabled: true,
    disabledNullable: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'ColorPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'ColorPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'ColorPropNativeComponentView',

  validAttributes: {
    tintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default,
    },
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'DimensionPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'DimensionPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'DimensionPropNativeComponentView',

  validAttributes: {
    marginBack: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'EdgeInsetsPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'EdgeInsetsPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'EdgeInsetsPropNativeComponentView',
  validAttributes: {},
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'EnumPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'EnumPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'EnumPropNativeComponentView',

  validAttributes: {
    alignment: true,
    intervals: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'EventNestedObjectPropsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
const {ConditionallyIgnoredEventHandlers} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');

let nativeComponentName = 'EventNestedObjectPropsNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'EventNestedObjectPropsNativeComponentView',

  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },
  },

  validAttributes: {
    disabled: true,

    ...ConditionallyIgnoredEventHandlers({
      onChange: true,
    }),
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'EventPropsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
const {ConditionallyIgnoredEventHandlers} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');

let nativeComponentName = 'EventPropsNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'EventPropsNativeComponentView',

  bubblingEventTypes: {
    topPaperDirectName: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },

    topEnd: {
      phasedRegistrationNames: {
        captured: 'onEndCapture',
        bubbled: 'onEnd',
      },
    },

    topPaperBubblingName: {
      phasedRegistrationNames: {
        captured: 'onEventBubblingWithPaperNameCapture',
        bubbled: 'onEventBubblingWithPaperName',
      },
    },
  },

  directEventTypes: {
    topEventDirect: {
      registrationName: 'onEventDirect',
    },

    topPaperDirectName: {
      registrationName: 'onEventDirectWithPaperName',
    },

    topPaperBubblingName: {
      registrationName: 'onOrientationChange',
    },
  },

  validAttributes: {
    disabled: true,

    ...ConditionallyIgnoredEventHandlers({
      onChange: true,
      onEventDirect: true,
      onEventDirectWithPaperName: true,
      onOrientationChange: true,
      onEnd: true,
      onEventBubblingWithPaperName: true,
    }),
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'FloatPropsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'FloatPropsNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'FloatPropsNativeComponentView',

  validAttributes: {
    blurRadius: true,
    blurRadius2: true,
    blurRadius3: true,
    blurRadius4: true,
    blurRadius5: true,
    blurRadius6: true,
    blurRadiusNullable: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'ImagePropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'ImagePropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'ImagePropNativeComponentView',

  validAttributes: {
    thumbImage: {
      process: require('react-native/Libraries/Image/resolveAssetSource'),
    },
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'IntegerPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'IntegerPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'IntegerPropNativeComponentView',

  validAttributes: {
    progress1: true,
    progress2: true,
    progress3: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'InterfaceOnlyNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
const {ConditionallyIgnoredEventHandlers} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');

let nativeComponentName = 'RCTInterfaceOnlyComponent';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'RCTInterfaceOnlyComponent',

  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },
  },

  validAttributes: {
    title: true,

    ...ConditionallyIgnoredEventHandlers({
      onChange: true,
    }),
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'MixedPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'MixedPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'MixedPropNativeComponentView',

  validAttributes: {
    mixedProp: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'MultiNativePropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'MultiNativePropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'MultiNativePropNativeComponentView',

  validAttributes: {
    thumbImage: {
      process: require('react-native/Libraries/Image/resolveAssetSource'),
    },

    color: {
      process: require('react-native/Libraries/StyleSheet/processColor').default,
    },

    thumbTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default,
    },

    point: {
      diff: require('react-native/Libraries/Utilities/differ/pointsDiffer'),
    },
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'NoPropsNoEventsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'NoPropsNoEventsNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'NoPropsNoEventsNativeComponentView',
  validAttributes: {},
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'ObjectPropsNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'ObjectPropsNativeComponent';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'ObjectPropsNativeComponent',

  validAttributes: {
    objectProp: true,
    objectArrayProp: true,
    objectPrimitiveRequiredProp: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'PointPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'PointPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'PointPropNativeComponentView',

  validAttributes: {
    startPoint: {
      diff: require('react-native/Libraries/Utilities/differ/pointsDiffer'),
    },
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;

exports[`GenerateViewConfigJs can generate for 'StringPropNativeComponent.js' 1`] = `
Map {
  "RNCodegenModuleFixturesNativeViewConfig.js" => "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');

let nativeComponentName = 'StringPropNativeComponentView';


export const __INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'StringPropNativeComponentView',

  validAttributes: {
    placeholder: true,
    defaultValue: true,
  },
};

export default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);
",
}
`;
