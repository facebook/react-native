// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeneratePropsCpp can generate for 'ArrayPropsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/components/image/conversions.h>
#include <react/renderer/components/view/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

ArrayPropsNativeComponentViewProps::ArrayPropsNativeComponentViewProps(
    const PropsParserContext &context,
    const ArrayPropsNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    names(convertRawProp(context, rawProps, \\"names\\", sourceProps.names, {})),
    disableds(convertRawProp(context, rawProps, \\"disableds\\", sourceProps.disableds, {})),
    progress(convertRawProp(context, rawProps, \\"progress\\", sourceProps.progress, {})),
    radii(convertRawProp(context, rawProps, \\"radii\\", sourceProps.radii, {})),
    colors(convertRawProp(context, rawProps, \\"colors\\", sourceProps.colors, {})),
    srcs(convertRawProp(context, rawProps, \\"srcs\\", sourceProps.srcs, {})),
    points(convertRawProp(context, rawProps, \\"points\\", sourceProps.points, {})),
    edgeInsets(convertRawProp(context, rawProps, \\"edgeInsets\\", sourceProps.edgeInsets, {})),
    dimensions(convertRawProp(context, rawProps, \\"dimensions\\", sourceProps.dimensions, {})),
    sizes(convertRawProp(context, rawProps, \\"sizes\\", ArrayPropsNativeComponentViewSizesMaskWrapped{ .value = sourceProps.sizes }, {static_cast<ArrayPropsNativeComponentViewSizesMask>(ArrayPropsNativeComponentViewSizes::Small)}).value),
    object(convertRawProp(context, rawProps, \\"object\\", sourceProps.object, {})),
    arrayOfObjects(convertRawProp(context, rawProps, \\"arrayOfObjects\\", sourceProps.arrayOfObjects, {})),
    arrayOfMixed(convertRawProp(context, rawProps, \\"arrayOfMixed\\", sourceProps.arrayOfMixed, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName ArrayPropsNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"ArrayPropsNativeComponentView\\";
}

folly::dynamic ArrayPropsNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = ArrayPropsNativeComponentViewProps();
  const ArrayPropsNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const ArrayPropsNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (names != oldProps->names) {
    result[\\"names\\"] = toDynamic(names);
  }
    
  if (disableds != oldProps->disableds) {
    result[\\"disableds\\"] = toDynamic(disableds);
  }
    
  if (progress != oldProps->progress) {
    result[\\"progress\\"] = toDynamic(progress);
  }
    
  if (radii != oldProps->radii) {
    result[\\"radii\\"] = toDynamic(radii);
  }
    
  if (colors != oldProps->colors) {
    result[\\"colors\\"] = toDynamic(colors);
  }
    
  if (srcs != oldProps->srcs) {
    result[\\"srcs\\"] = toDynamic(srcs);
  }
    
  if (points != oldProps->points) {
    result[\\"points\\"] = toDynamic(points);
  }
    
  if (edgeInsets != oldProps->edgeInsets) {
    result[\\"edgeInsets\\"] = toDynamic(edgeInsets);
  }
    
  if (dimensions != oldProps->dimensions) {
    result[\\"dimensions\\"] = toDynamic(dimensions);
  }
    
  if (sizes != oldProps->sizes) {
    result[\\"sizes\\"] = toDynamic(sizes);
  }
    
  if (object != oldProps->object) {
    result[\\"object\\"] = toDynamic(object);
  }
    
  if (arrayOfObjects != oldProps->arrayOfObjects) {
    result[\\"arrayOfObjects\\"] = toDynamic(arrayOfObjects);
  }
    
  if (arrayOfMixed != oldProps->arrayOfMixed) {
    result[\\"arrayOfMixed\\"] = toDynamic(arrayOfMixed);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'BooleanPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

BooleanPropNativeComponentViewProps::BooleanPropNativeComponentViewProps(
    const PropsParserContext &context,
    const BooleanPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    disabled(convertRawProp(context, rawProps, \\"disabled\\", sourceProps.disabled, {false})),
    disabledNullable(convertRawProp(context, rawProps, \\"disabledNullable\\", sourceProps.disabledNullable, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName BooleanPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"BooleanPropNativeComponentView\\";
}

folly::dynamic BooleanPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = BooleanPropNativeComponentViewProps();
  const BooleanPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const BooleanPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (disabled != oldProps->disabled) {
    result[\\"disabled\\"] = disabled;
  }
    
  if (disabledNullable != oldProps->disabledNullable) {
    result[\\"disabledNullable\\"] = disabledNullable;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'ColorPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

ColorPropNativeComponentViewProps::ColorPropNativeComponentViewProps(
    const PropsParserContext &context,
    const ColorPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    tintColor(convertRawProp(context, rawProps, \\"tintColor\\", sourceProps.tintColor, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName ColorPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"ColorPropNativeComponentView\\";
}

folly::dynamic ColorPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = ColorPropNativeComponentViewProps();
  const ColorPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const ColorPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (tintColor != oldProps->tintColor) {
    result[\\"tintColor\\"] = *tintColor;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'DimensionPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/components/view/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

DimensionPropNativeComponentViewProps::DimensionPropNativeComponentViewProps(
    const PropsParserContext &context,
    const DimensionPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    marginBack(convertRawProp(context, rawProps, \\"marginBack\\", sourceProps.marginBack, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName DimensionPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"DimensionPropNativeComponentView\\";
}

folly::dynamic DimensionPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = DimensionPropNativeComponentViewProps();
  const DimensionPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const DimensionPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (marginBack != oldProps->marginBack) {
    result[\\"marginBack\\"] = toDynamic(marginBack);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'EdgeInsetsPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

EdgeInsetsPropNativeComponentViewProps::EdgeInsetsPropNativeComponentViewProps(
    const PropsParserContext &context,
    const EdgeInsetsPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)

     {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName EdgeInsetsPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"EdgeInsetsPropNativeComponentView\\";
}

folly::dynamic EdgeInsetsPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = EdgeInsetsPropNativeComponentViewProps();
  const EdgeInsetsPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const EdgeInsetsPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'EnumPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

EnumPropNativeComponentViewProps::EnumPropNativeComponentViewProps(
    const PropsParserContext &context,
    const EnumPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    alignment(convertRawProp(context, rawProps, \\"alignment\\", sourceProps.alignment, {EnumPropNativeComponentViewAlignment::Center})),
    intervals(convertRawProp(context, rawProps, \\"intervals\\", sourceProps.intervals, {EnumPropNativeComponentViewIntervals::Intervals0})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName EnumPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"EnumPropNativeComponentView\\";
}

folly::dynamic EnumPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = EnumPropNativeComponentViewProps();
  const EnumPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const EnumPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (alignment != oldProps->alignment) {
    result[\\"alignment\\"] = toDynamic(alignment);
  }
    
  if (intervals != oldProps->intervals) {
    result[\\"intervals\\"] = toDynamic(intervals);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'EventNestedObjectPropsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

EventNestedObjectPropsNativeComponentViewProps::EventNestedObjectPropsNativeComponentViewProps(
    const PropsParserContext &context,
    const EventNestedObjectPropsNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    disabled(convertRawProp(context, rawProps, \\"disabled\\", sourceProps.disabled, {false})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName EventNestedObjectPropsNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"EventNestedObjectPropsNativeComponentView\\";
}

folly::dynamic EventNestedObjectPropsNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = EventNestedObjectPropsNativeComponentViewProps();
  const EventNestedObjectPropsNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const EventNestedObjectPropsNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (disabled != oldProps->disabled) {
    result[\\"disabled\\"] = disabled;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'EventPropsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

EventPropsNativeComponentViewProps::EventPropsNativeComponentViewProps(
    const PropsParserContext &context,
    const EventPropsNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    disabled(convertRawProp(context, rawProps, \\"disabled\\", sourceProps.disabled, {false})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName EventPropsNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"EventPropsNativeComponentView\\";
}

folly::dynamic EventPropsNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = EventPropsNativeComponentViewProps();
  const EventPropsNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const EventPropsNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (disabled != oldProps->disabled) {
    result[\\"disabled\\"] = disabled;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'FloatPropsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

FloatPropsNativeComponentViewProps::FloatPropsNativeComponentViewProps(
    const PropsParserContext &context,
    const FloatPropsNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    blurRadius(convertRawProp(context, rawProps, \\"blurRadius\\", sourceProps.blurRadius, {0.0})),
    blurRadius2(convertRawProp(context, rawProps, \\"blurRadius2\\", sourceProps.blurRadius2, {0.001})),
    blurRadius3(convertRawProp(context, rawProps, \\"blurRadius3\\", sourceProps.blurRadius3, {2.1})),
    blurRadius4(convertRawProp(context, rawProps, \\"blurRadius4\\", sourceProps.blurRadius4, {0.0})),
    blurRadius5(convertRawProp(context, rawProps, \\"blurRadius5\\", sourceProps.blurRadius5, {1.0})),
    blurRadius6(convertRawProp(context, rawProps, \\"blurRadius6\\", sourceProps.blurRadius6, {0.0})),
    blurRadiusNullable(convertRawProp(context, rawProps, \\"blurRadiusNullable\\", sourceProps.blurRadiusNullable, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName FloatPropsNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"FloatPropsNativeComponentView\\";
}

folly::dynamic FloatPropsNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = FloatPropsNativeComponentViewProps();
  const FloatPropsNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const FloatPropsNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if ((blurRadius != oldProps->blurRadius) && !(std::isnan(blurRadius) && std::isnan(oldProps->blurRadius))) {
    result[\\"blurRadius\\"] = blurRadius;
  }
    
  if ((blurRadius2 != oldProps->blurRadius2) && !(std::isnan(blurRadius2) && std::isnan(oldProps->blurRadius2))) {
    result[\\"blurRadius2\\"] = blurRadius2;
  }
    
  if ((blurRadius3 != oldProps->blurRadius3) && !(std::isnan(blurRadius3) && std::isnan(oldProps->blurRadius3))) {
    result[\\"blurRadius3\\"] = blurRadius3;
  }
    
  if ((blurRadius4 != oldProps->blurRadius4) && !(std::isnan(blurRadius4) && std::isnan(oldProps->blurRadius4))) {
    result[\\"blurRadius4\\"] = blurRadius4;
  }
    
  if ((blurRadius5 != oldProps->blurRadius5) && !(std::isnan(blurRadius5) && std::isnan(oldProps->blurRadius5))) {
    result[\\"blurRadius5\\"] = blurRadius5;
  }
    
  if ((blurRadius6 != oldProps->blurRadius6) && !(std::isnan(blurRadius6) && std::isnan(oldProps->blurRadius6))) {
    result[\\"blurRadius6\\"] = blurRadius6;
  }
    
  if ((blurRadiusNullable != oldProps->blurRadiusNullable) && !(std::isnan(blurRadiusNullable) && std::isnan(oldProps->blurRadiusNullable))) {
    result[\\"blurRadiusNullable\\"] = blurRadiusNullable;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'ImagePropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/components/image/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

ImagePropNativeComponentViewProps::ImagePropNativeComponentViewProps(
    const PropsParserContext &context,
    const ImagePropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    thumbImage(convertRawProp(context, rawProps, \\"thumbImage\\", sourceProps.thumbImage, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName ImagePropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"ImagePropNativeComponentView\\";
}

folly::dynamic ImagePropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = ImagePropNativeComponentViewProps();
  const ImagePropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const ImagePropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (thumbImage != oldProps->thumbImage) {
    result[\\"thumbImage\\"] = toDynamic(thumbImage);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'IntegerPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

IntegerPropNativeComponentViewProps::IntegerPropNativeComponentViewProps(
    const PropsParserContext &context,
    const IntegerPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    progress1(convertRawProp(context, rawProps, \\"progress1\\", sourceProps.progress1, {0})),
    progress2(convertRawProp(context, rawProps, \\"progress2\\", sourceProps.progress2, {-1})),
    progress3(convertRawProp(context, rawProps, \\"progress3\\", sourceProps.progress3, {10})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName IntegerPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"IntegerPropNativeComponentView\\";
}

folly::dynamic IntegerPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = IntegerPropNativeComponentViewProps();
  const IntegerPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const IntegerPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (progress1 != oldProps->progress1) {
    result[\\"progress1\\"] = progress1;
  }
    
  if (progress2 != oldProps->progress2) {
    result[\\"progress2\\"] = progress2;
  }
    
  if (progress3 != oldProps->progress3) {
    result[\\"progress3\\"] = progress3;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'InterfaceOnlyNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

InterfaceOnlyNativeComponentViewProps::InterfaceOnlyNativeComponentViewProps(
    const PropsParserContext &context,
    const InterfaceOnlyNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    title(convertRawProp(context, rawProps, \\"title\\", sourceProps.title, {\\"\\"})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName InterfaceOnlyNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"InterfaceOnlyNativeComponentView\\";
}

folly::dynamic InterfaceOnlyNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = InterfaceOnlyNativeComponentViewProps();
  const InterfaceOnlyNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const InterfaceOnlyNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (title != oldProps->title) {
    result[\\"title\\"] = title;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'MixedPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <folly/dynamic.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

MixedPropNativeComponentViewProps::MixedPropNativeComponentViewProps(
    const PropsParserContext &context,
    const MixedPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    mixedProp(convertRawProp(context, rawProps, \\"mixedProp\\", sourceProps.mixedProp, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName MixedPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"MixedPropNativeComponentView\\";
}

folly::dynamic MixedPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = MixedPropNativeComponentViewProps();
  const MixedPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const MixedPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (mixedProp != oldProps->mixedProp) {
    result[\\"mixedProp\\"] = mixedProp;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'MultiNativePropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/components/image/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

MultiNativePropNativeComponentViewProps::MultiNativePropNativeComponentViewProps(
    const PropsParserContext &context,
    const MultiNativePropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    thumbImage(convertRawProp(context, rawProps, \\"thumbImage\\", sourceProps.thumbImage, {})),
    color(convertRawProp(context, rawProps, \\"color\\", sourceProps.color, {})),
    thumbTintColor(convertRawProp(context, rawProps, \\"thumbTintColor\\", sourceProps.thumbTintColor, {})),
    point(convertRawProp(context, rawProps, \\"point\\", sourceProps.point, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName MultiNativePropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"MultiNativePropNativeComponentView\\";
}

folly::dynamic MultiNativePropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = MultiNativePropNativeComponentViewProps();
  const MultiNativePropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const MultiNativePropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (thumbImage != oldProps->thumbImage) {
    result[\\"thumbImage\\"] = toDynamic(thumbImage);
  }
    
  if (color != oldProps->color) {
    result[\\"color\\"] = *color;
  }
    
  if (thumbTintColor != oldProps->thumbTintColor) {
    result[\\"thumbTintColor\\"] = *thumbTintColor;
  }
    
  if (point != oldProps->point) {
    result[\\"point\\"] = toDynamic(point);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'NoPropsNoEventsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

NoPropsNoEventsNativeComponentViewProps::NoPropsNoEventsNativeComponentViewProps(
    const PropsParserContext &context,
    const NoPropsNoEventsNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)

     {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName NoPropsNoEventsNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"NoPropsNoEventsNativeComponentView\\";
}

folly::dynamic NoPropsNoEventsNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = NoPropsNoEventsNativeComponentViewProps();
  const NoPropsNoEventsNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const NoPropsNoEventsNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'ObjectPropsNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/components/image/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

ObjectPropsNativeComponentProps::ObjectPropsNativeComponentProps(
    const PropsParserContext &context,
    const ObjectPropsNativeComponentProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    objectProp(convertRawProp(context, rawProps, \\"objectProp\\", sourceProps.objectProp, {})),
    objectArrayProp(convertRawProp(context, rawProps, \\"objectArrayProp\\", sourceProps.objectArrayProp, {})),
    objectPrimitiveRequiredProp(convertRawProp(context, rawProps, \\"objectPrimitiveRequiredProp\\", sourceProps.objectPrimitiveRequiredProp, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName ObjectPropsNativeComponentProps::getDiffPropsImplementationTarget() const {
  return \\"ObjectPropsNativeComponent\\";
}

folly::dynamic ObjectPropsNativeComponentProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = ObjectPropsNativeComponentProps();
  const ObjectPropsNativeComponentProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const ObjectPropsNativeComponentProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (objectProp != oldProps->objectProp) {
    result[\\"objectProp\\"] = toDynamic(objectProp);
  }
    
  if (objectArrayProp != oldProps->objectArrayProp) {
    result[\\"objectArrayProp\\"] = toDynamic(objectArrayProp);
  }
    
  if (objectPrimitiveRequiredProp != oldProps->objectPrimitiveRequiredProp) {
    result[\\"objectPrimitiveRequiredProp\\"] = toDynamic(objectPrimitiveRequiredProp);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'PointPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

PointPropNativeComponentViewProps::PointPropNativeComponentViewProps(
    const PropsParserContext &context,
    const PointPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    startPoint(convertRawProp(context, rawProps, \\"startPoint\\", sourceProps.startPoint, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName PointPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"PointPropNativeComponentView\\";
}

folly::dynamic PointPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = PointPropNativeComponentViewProps();
  const PointPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const PointPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (startPoint != oldProps->startPoint) {
    result[\\"startPoint\\"] = toDynamic(startPoint);
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;

exports[`GeneratePropsCpp can generate for 'StringPropNativeComponent.js' 1`] = `
Object {
  "Props.cpp": "
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/RNCodegenModuleFixtures/Props.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

StringPropNativeComponentViewProps::StringPropNativeComponentViewProps(
    const PropsParserContext &context,
    const StringPropNativeComponentViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    placeholder(convertRawProp(context, rawProps, \\"placeholder\\", sourceProps.placeholder, {\\"\\"})),
    defaultValue(convertRawProp(context, rawProps, \\"defaultValue\\", sourceProps.defaultValue, {})) {}
    
#ifdef RN_SERIALIZABLE_STATE
ComponentName StringPropNativeComponentViewProps::getDiffPropsImplementationTarget() const {
  return \\"StringPropNativeComponentView\\";
}

folly::dynamic StringPropNativeComponentViewProps::getDiffProps(
    const Props* prevProps) const {
  static const auto defaultProps = StringPropNativeComponentViewProps();
  const StringPropNativeComponentViewProps* oldProps = prevProps == nullptr
      ? &defaultProps
      : static_cast<const StringPropNativeComponentViewProps*>(prevProps);
  if (this == oldProps) {
    return folly::dynamic::object();
  }
  folly::dynamic result = HostPlatformViewProps::getDiffProps(prevProps);
  
  if (placeholder != oldProps->placeholder) {
    result[\\"placeholder\\"] = placeholder;
  }
    
  if (defaultValue != oldProps->defaultValue) {
    result[\\"defaultValue\\"] = defaultValue;
  }
  return result;
}
#endif

} // namespace facebook::react
",
}
`;
